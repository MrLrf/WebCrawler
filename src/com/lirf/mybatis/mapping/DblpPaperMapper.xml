<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.lirf.mybatis.mapper.DblpPaperMapper">
    <resultMap id="questionMap" type="com.lirf.model.Paper">
        <id property="paper_id" column="paper_id" javaType="String"></id>
        <result property="conference_id" column="conference_id" javaType="String"></result>
        <result property="paper_topical" column="paper_topical" javaType="String"></result>
        <result property="paper_name" column="paper_name" javaType="String"></result>
        <result property="page_num" column="page_num" javaType="String"></result>
        <result property="paper_url" column="paper_url" javaType="String"></result>
    </resultMap>

    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <!--
        根据id查询得到一个user对象
     -->
    <select id="getPapers" resultMap="questionMap">
        select * from dblp_paper
    </select>

    <insert id="insertPaper" parameterType="com.lirf.model.DblpConference">
        INSERT into `dblp_paper` (`paper_id`,`conference_id`,`paper_topical`,`paper_name`,`page_num`,`paper_url`)
        VALUES (#{paper_id},#{conference_id},#{paper_topical},#{paper_name},#{page_num},#{paper_url})
    </insert>

</mapper>